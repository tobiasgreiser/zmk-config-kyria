/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Transparent/None

#define _____ &trans
#define xxxxx &none

// Layers

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define ADJUST2 4
#define SPCHAR 5

&mt { tapping-term-ms = <200>; };

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_space {
            bindings = <&kp SPACE>;
            key-positions = <7 8>;
            layers = <0>;
        };

        active_special_characters {
            bindings = <&mo 5>;
            key-positions = <33 46>;
            layers = <0>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td_ds: tap_dance_device_select {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <3000>;
            bindings =
                <&bt BT_SEL 0>,
                <&bt BT_SEL 1>,
                <&bt BT_SEL 2>,
                <&bt BT_SEL 3>,
                <&bt BT_SEL 4>;
        };

        td_media: tap_dance_media {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREV>;
        };

        td_out: tap_dance_output {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&out OUT_USB>, <&out OUT_BLE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  TAB    |  Q  |  W  |  E  |  R   |  T  |                                |  Y  |  U   |   I   |  O  |   P   |  =  |
            // |CTRL(ESC)|  A  |  S  |  D  |  F   |  G  |                                |  H  |  J   |   K   |  L  | L3(;) |  '  |
            // |_________|  Z  |  X  |  C  |  V   |  B  | LOWER | CTRL |  |  \   | RAISE |  N  |  M   |   ,   |  .  |   /   |  -  |
            //                       |_____| LALT |_____| SPACE | GUI  |  | BSPC |  RET  |_____| RALT | PSCRN |

            bindings = <
&kp TAB        &kp Q  &kp W  &kp E  &kp R  &kp T                                                     &kp Y       &kp U      &kp I      &kp O    &kp P             &kp EQUAL
&mt LCTRL ESC  &kp A  &kp S  &kp D  &kp F  &kp G                                                     &kp H       &kp J      &kp K      &kp L    &lt ADJUST2 SEMI  &kp SQT
&mo 6          &kp Z  &kp X  &kp C  &kp V  &kp B      &mo 1      &kp LGUI  &none          &mo 2      &kp N       &kp M      &kp COMMA  &kp DOT  &kp FSLH          &kp MINUS
                             &none  &none  &kp LSHFT  &kp SPACE  &kp LALT  &kp BACKSPACE  &kp ENTER  &kp LSHIFT  &kp RCTRL  &kp BSLH
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp GRAVE  &kp TILDE  &none     &none     &none                                          &none      &none     &none     &none     &none     &none
&trans  &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT                                      &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp LBKT  &kp LBRC
&none   &none      &none      &none     &none     &none      &trans  &trans  &trans      &trans  &none      &kp PIPE  &none     &kp RPAR  &kp RBKT  &kp RBKT
                              &trans    &trans    &trans     &trans  &trans  &kp DELETE  &trans  &trans     &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3        &kp F4        &kp F5                                          &kp F6  &kp F7     &kp F8  &kp F9  &kp F10  &kp F11
&trans  &kp N1  &kp N2  &kp N3        &kp N4        &kp N5                                          &kp N6  &kp N7     &kp N8  &kp N9  &kp N0   &kp F12
&none   &none   &none   &kp C_VOL_DN  &kp C_VOL_UP  &kp K_MUTE  &trans  &trans  &td_media   &trans  &none   &kp PSCRN  &none   &none   &none    &none
                        &trans        &trans        &trans      &trans  &trans  &kp DELETE  &trans  &trans  &trans     &trans
            >;
        };

        adjust_layer {
            bindings = <
&trans  &none  &kp LC(RIGHT)  &none   &none   &none                                          &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &none  &bt BT_CLR
&trans  &none  &none          &none   &none   &none                                          &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &none  &none
&none   &none  &none          &none   &none   &kp LC(LEFT)  &trans  &trans  &td_out  &trans  &none     &none      &none      &none      &none  &none
                              &trans  &trans  &trans        &trans  &trans  &td_ds   &trans  &trans    &trans     &trans
            >;
        };

        adjust_layer_semi {
            bindings = <
&trans  &none  &kp LC(RIGHT)  &none   &none   &none                                          &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &none   &bt BT_CLR
&trans  &none  &none          &none   &none   &none                                          &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans  &none
&none   &none  &none          &none   &none   &kp LC(LEFT)  &trans  &trans  &td_out  &trans  &none     &none      &none      &none      &none   &none
                              &trans  &trans  &trans        &trans  &trans  &td_ds   &trans  &trans    &trans     &trans
            >;
        };

        special_characters_layer {
            bindings = <
&none  &kp RA(Q)  &none      &kp RA(NUMBER_5)  &none  &none                              &kp RA(Y)  &none  &none  &none  &kp RA(P)  &none
&none  &none      &kp RA(S)  &none             &none  &none                              &none      &none  &none  &none  &none      &none
&none  &none      &none      &none             &none  &none  &none  &none  &none  &none  &none      &none  &none  &none  &none      &none
                             &none             &none  &none  &none  &none  &none  &none  &none      &none  &none
            >;
        };

        numpad {
            bindings = <
&none  &none  &none  &none            &none         &none                                   &none   &kp N7     &kp N8  &kp N9  &none  &none
&none  &none  &none  &kp KP_MULTIPLY  &kp KP_PLUS   &none                                   &none   &kp N4     &kp N5  &kp N6  &none  &none
&none  &none  &none  &kp KP_DIVIDE    &kp KP_MINUS  &none   &trans  &trans  &trans  &trans  &none   &kp N1     &kp N2  &kp N3  &none  &none
                     &trans           &trans        &trans  &trans  &trans  &trans  &trans  &kp N0  &kp COMMA  &trans
            >;
        };
    };
};
