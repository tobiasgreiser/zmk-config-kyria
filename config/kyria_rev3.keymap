/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Transparent/None

#define _____ &trans
#define xxxxx &none

// Layers

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&mt {
    tapping-term-ms = <200>;
};

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  TAB    |  Q  |  W  |  E  |  R  |  T  |                                      |  Y  |  U   |  I    |  O  |  P  |   \  |
            // |CTRL(ESC)|  A  |  S  |  D  |  F  |  G  |                                      |  H  |  J   |  K    |  L  |  ;  |   '  |
            // | SHIFT   |  Z  |  X  |  C  |  V  |  B  | L SHIFT | LOWER |  | RAISE | L SHIFT |  N  |  M   |  ,    |  .  |  /  | CTRL |
            //                       | GUI | DEL | RET |  SPACE  |  ESC  |  |  RET  |  SPACE  | TAB | BSPC | R-ALT |

            bindings = <
      &kp TAB  &kp Q  &kp W  &kp E     &kp R      &kp T                                                        &kp Y     &kp U            &kp I    &kp O       &kp P  &kp EQUAL
&mt LCTRL ESC  &kp A  &kp S  &kp D     &kp F      &kp G                                                        &kp H     &kp J            &kp K    &kp L  &lt 3 SEMI    &kp SQT
     &kp LBKT  &kp Z  &kp X  &kp C     &kp V      &kp B       &mo 1   &kp LGUI       &kp BSLH       &mo 2      &kp N     &kp M        &kp COMMA  &kp DOT    &kp FSLH   &kp RBKT
                             &none  &kp LALT  &kp SPACE  &kp LSHIFT  &kp RCTRL  &kp BACKSPACE  &kp RSHIFT  &kp ENTER  &kp RALT  &kp PRINTSCREEN
            >;
        };

        lower_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E  |  R  |  T  |                                          |  Y  |  U   |  I    |  O  |  P  |   \  |
            // |  TAB  |  A  |  S  |  D  |  F  |  G  |                                          |  H  |  J   |  K    |  L  |  ;  |   '  |
            // | SHIFT |  Z  |  X  |  C  |  V  |  B  | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N  |  M   |  ,    |  .  |  /  | CTRL |
            //                     | GUI | DEL | RET |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB | BSPC | R-ALT |

            bindings = <
&trans  &kp GRAVE  &kp TILDE     &none     &none  &kp RA(NUMBER_5)                                  &kp RA(Y)  &kp RA(Q)  &kp RA(P)  &kp UNDER  &kp MINUS  &none
&trans   &kp EXCL     &kp AT  &kp HASH  &kp DLLR         &kp PRCNT                                  &kp CARET   &kp AMPS   &kp STAR   &kp LPAR   &kp RPAR  &none
 &none      &none  &kp RA(S)     &none     &none             &none  &trans   &none   &none  &trans      &none   &kp PIPE      &none      &none      &none  &none
                                &trans    &trans            &trans  &trans  &trans  &trans  &trans     &trans     &trans     &trans
            >;
        };

        raise_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  F1 |  F2 |  F3 |  F4 |  F5 |                                          |  F6 |  F7  |  F8   |  F9 | F10 |   \  |
            // |  TAB  |  1  |  2  |  3  |  4  |  5  |                                          |  6  |  7   |  8    |  9  |  0  |   '  |
            // | SHIFT |  Z  |  X  |  C  |  V  |  B  | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N  |  M   |  ,    |  .  |  /  | CTRL |
            //                     | GUI | DEL | RET |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB | BSPC | R-ALT |

            bindings = <
&trans  &kp F1  &kp F2        &kp F3        &kp F4      &kp F5                                      &kp F6            &kp F7      &kp F8  &kp F9  &kp F10  &kp F11
&trans  &kp N1  &kp N2        &kp N3        &kp N4      &kp N5                                      &kp N6            &kp N7      &kp N8  &kp N9   &kp N0  &kp F12
 &none   &none   &none  &kp C_VOL_DN  &kp C_VOL_UP  &kp K_MUTE  &trans   &none   &none  &trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT   &none    &none    &none
                              &trans        &trans      &trans  &trans  &trans  &trans  &trans      &trans            &trans      &trans
            >;
        };

        adjust_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&trans         &none  &kp LC(RIGHT)         &none       &kp END         &none                                     &none  &kp PG_DN  &kp PG_UP   &kp HOME  &none   &bt BT_CLR
&trans  &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                  &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT  &none   &sys_reset
 &none  &out OUT_BLE   &out OUT_USB         &none         &none  &kp LC(LEFT)  &trans   &none   &none  &trans     &none      &none      &none      &none  &none  &bootloader
                                           &trans        &trans        &trans  &trans  &trans  &trans  &trans    &trans     &trans     &trans
            >;
        };
    };
};
